const path = require('path')
const resolve = file => path.resolve(__dirname, file)

const iconfonts = require(resolve('./util/iconfonts.js'))
const presets = require(resolve('./util/presets.js'))
const locales = require(resolve('./util/locales.js'))

function isCustom (answers) {
  return answers.preset === 'configure'
}

module.exports = [
  {
    name: 'preset',
    message: 'Choose a preset:',
    type: 'list',
    choices: [
      ...presets,
<<<<<<< HEAD
      { name: 'Configure (advanced)', value: 'configure' },
    ],
    default: 'default',
=======
      { name: 'Configure (advanced)', value: 'configure' }
    ],
    default: 'default'
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'replaceComponents',
    type: 'confirm',
    message: 'Use a pre-made template? (will replace App.vue and HelloWorld.vue)',
    default: true,
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'useTheme',
    type: 'confirm',
    message: 'Use custom theme?',
    default: false,
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'useCustomProperties',
    type: 'confirm',
    message: 'Use custom properties (CSS variables)?',
    default: false,
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'iconFont',
    type: 'list',
    message: 'Select icon font',
    choices: iconfonts,
    default: 'mdi',
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'installFonts',
    type: 'confirm',
    message: 'Use fonts as a dependency (for Electron or offline)?',
    default: false,
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'useAlaCarte',
    type: 'confirm',
    message: 'Use a-la-carte components?',
    default: true,
<<<<<<< HEAD
    when: isCustom,
=======
    when: isCustom
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'usePolyfill',
    type: 'confirm',
    message: 'Use babel/polyfill?',
    default: true,
    when: answers => {
      return isCustom(answers) && !answers.useAlaCarte
<<<<<<< HEAD
    },
=======
    }
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
  },
  {
    name: 'locale',
    type: 'list',
    message: 'Select locale',
    choices: locales,
    default: 'en',
<<<<<<< HEAD
    when: isCustom,
  },
=======
    when: isCustom
  }
>>>>>>> 4abe4c20526da80e85ad10371378d4beb2ef43f3
]
